From d130fca8cd481e2d1c540e1a9b9ae5febd80a6d7 Mon Sep 17 00:00:00 2001
From: amao <86212616+maomao11223@users.noreply.github.com>
Date: Tue, 8 Apr 2025 21:11:51 +0800
Subject: [PATCH 2/4] =?UTF-8?q?=E6=9F=A5=E8=A9=A2=E6=89=80=E6=9C=89stock?=
 =?UTF-8?q?=20api?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../demo/controller/StockController.java      | 51 +++++++++++---
 .../example/demo/dto/StockQueryParams.java    | 11 +++
 .../com/example/demo/dto/common/PageDto.java  | 19 ++++++
 .../demo/repository/StockRepository.java      | 10 +--
 .../repository/impl/StockRepositoryImpl.java  | 68 +++++++++++++++++++
 .../demo/rowMapper/StockRowMapper.java        | 22 ++++++
 .../example/demo/service/StockService.java    |  6 +-
 .../demo/service/impl/StockServiceImpl.java   | 12 ++--
 src/main/java/com/example/demo/util/Page.java | 42 ------------
 .../java/com/example/demo/util/PageUtil.java  | 13 ++++
 .../com/example/demo/util/PageableUtils.java  | 21 ++++++
 11 files changed, 212 insertions(+), 63 deletions(-)
 create mode 100644 src/main/java/com/example/demo/dto/StockQueryParams.java
 create mode 100644 src/main/java/com/example/demo/dto/common/PageDto.java
 create mode 100644 src/main/java/com/example/demo/repository/impl/StockRepositoryImpl.java
 create mode 100644 src/main/java/com/example/demo/rowMapper/StockRowMapper.java
 delete mode 100644 src/main/java/com/example/demo/util/Page.java
 create mode 100644 src/main/java/com/example/demo/util/PageUtil.java
 create mode 100644 src/main/java/com/example/demo/util/PageableUtils.java

diff --git a/src/main/java/com/example/demo/controller/StockController.java b/src/main/java/com/example/demo/controller/StockController.java
index 4b48ad8..4250d9b 100644
--- a/src/main/java/com/example/demo/controller/StockController.java
+++ b/src/main/java/com/example/demo/controller/StockController.java
@@ -1,18 +1,25 @@
 package com.example.demo.controller;
 
+import com.example.demo.dto.StockQueryParams;
 import com.example.demo.entity.Stock;
 import com.example.demo.model.common.ApiRestResponse;
-import com.example.demo.model.common.RestApiException;
 import com.example.demo.service.StockService;
-import com.example.demo.util.Page;
+import com.example.demo.util.PageUtil;
+import com.example.demo.util.PageableUtils;
 import io.swagger.v3.oas.annotations.Operation;
+import jakarta.validation.constraints.Max;
+import jakarta.validation.constraints.Min;
 import lombok.RequiredArgsConstructor;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.domain.Sort;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.RestController;
 
 import java.util.List;
@@ -27,20 +34,42 @@ public class StockController {
 
     @GetMapping
     @Operation(summary = "取得所有Stock")
-    public ApiRestResponse<Page<Stock>> getAllStocks() {
+    public ApiRestResponse<PageUtil<Stock>> getAllStocks(
+            // 查詢條件 Filtering
+            @RequestParam(required = false) String search,
 
+            // 排序 Sorting
+            @RequestParam(defaultValue = "created_date") String orderBy,
+            @RequestParam(defaultValue = "desc") String sortBy,
 
-        List<Stock> stockList = stockService.getAllStocks();
+            // 分頁 Pagination
+            @RequestParam(defaultValue = "10") @Max(1000) @Min(0) Integer size,
+            @RequestParam(defaultValue = "0") @Min(0) Integer page
+    ) {
 
-        System.out.println("controller: " + stockList);
+        // 設定查詢條件
+        StockQueryParams stockQueryParams = new StockQueryParams();
+        stockQueryParams.setOrderBy(orderBy);
+        stockQueryParams.setPage(page);
+        stockQueryParams.setSize(size);
+        stockQueryParams.setSortBy(sortBy);
+        stockQueryParams.setSearch(search);
 
-        Page<Stock> page = new Page<>();
-        page.setLimit(0);
-        page.setTotal(100);
-        page.setOffset(0);
-        page.setResults(stockList);
+        // 取得查詢後的資料
+        List<Stock> stockList = stockService.getStocks(stockQueryParams);
 
-        return ApiRestResponse.success(page);
+        // 取得總筆數
+        Integer total = stockService.countStocks(stockQueryParams);
+
+        // 分頁
+        PageUtil<Stock> resultPageUtil = new PageUtil<>();
+        resultPageUtil.setPage(page);
+        resultPageUtil.setTotal(total);
+        resultPageUtil.setSize(size);
+        resultPageUtil.setResults(stockList);
+
+
+        return ApiRestResponse.success(resultPageUtil);
     }
 
     @GetMapping("/{symbol}")
diff --git a/src/main/java/com/example/demo/dto/StockQueryParams.java b/src/main/java/com/example/demo/dto/StockQueryParams.java
new file mode 100644
index 0000000..67025c0
--- /dev/null
+++ b/src/main/java/com/example/demo/dto/StockQueryParams.java
@@ -0,0 +1,11 @@
+package com.example.demo.dto;
+
+import com.example.demo.dto.common.PageDto;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+@EqualsAndHashCode(callSuper = true)
+@Data
+public class StockQueryParams  extends PageDto {
+
+}
diff --git a/src/main/java/com/example/demo/dto/common/PageDto.java b/src/main/java/com/example/demo/dto/common/PageDto.java
new file mode 100644
index 0000000..e8647bc
--- /dev/null
+++ b/src/main/java/com/example/demo/dto/common/PageDto.java
@@ -0,0 +1,19 @@
+package com.example.demo.dto.common;
+
+import io.swagger.v3.oas.annotations.media.Schema;
+import lombok.Data;
+
+@Data
+public class PageDto {
+
+    @Schema(description = "關鍵字查詢條件",example = "台積電")
+    private String search;
+    @Schema(description = "排序條件",example = "建立日期")
+    private String orderBy;
+    @Schema(description = "排序條件",example = "desc")
+    private String sortBy;
+    @Schema(description = "顯示多少筆數據",example = "10")
+    private Integer size;
+    @Schema(description = "分頁索引",example = "0")
+    private Integer page;
+}
diff --git a/src/main/java/com/example/demo/repository/StockRepository.java b/src/main/java/com/example/demo/repository/StockRepository.java
index 0c8b769..d1b07b3 100644
--- a/src/main/java/com/example/demo/repository/StockRepository.java
+++ b/src/main/java/com/example/demo/repository/StockRepository.java
@@ -1,12 +1,12 @@
 package com.example.demo.repository;
 
+import com.example.demo.dto.StockQueryParams;
 import com.example.demo.entity.Stock;
-import com.example.demo.entity.StockPrice;
-import org.springframework.data.jpa.repository.JpaRepository;
 
 import java.util.List;
-import java.util.Optional;
 
-public interface StockRepository extends JpaRepository<Stock, Long> {
-    List<Stock> findAll();
+public interface StockRepository {
+
+    List<Stock> getStocks(StockQueryParams stockQueryParams);
+    Integer countStocks(StockQueryParams stockQueryParams);
 }
\ No newline at end of file
diff --git a/src/main/java/com/example/demo/repository/impl/StockRepositoryImpl.java b/src/main/java/com/example/demo/repository/impl/StockRepositoryImpl.java
new file mode 100644
index 0000000..84c1249
--- /dev/null
+++ b/src/main/java/com/example/demo/repository/impl/StockRepositoryImpl.java
@@ -0,0 +1,68 @@
+package com.example.demo.repository.impl;
+
+import com.example.demo.dto.StockQueryParams;
+import com.example.demo.entity.Stock;
+import com.example.demo.repository.StockRepository;
+import com.example.demo.rowMapper.StockRowMapper;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
+import org.springframework.stereotype.Component;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+@Component
+public class StockRepositoryImpl implements StockRepository {
+
+    @Autowired
+    NamedParameterJdbcTemplate namedParameterJdbcTemplate;
+
+    @Override
+    public List<Stock> getStocks(StockQueryParams stockQueryParams) {
+        String sql = "SELECT stock_id,symbol,name,market,industry,created_date " +
+                "FROM stocks WHERE 1=1 ";
+
+        Map<String, Object> map = new HashMap<>();
+
+        // 查詢條件
+        sql = addFilteringSql(sql, map, stockQueryParams);
+
+        // 排序 orderBy 只能用字串拼接的方式，不能用傳入變數的方式！
+        sql = sql + " ORDER BY " + stockQueryParams.getOrderBy() + " " + stockQueryParams.getSortBy();
+
+        // 分頁
+        sql = sql + " LIMIT :limit OFFSET :offset";
+        map.put("limit", stockQueryParams.getSize());
+        map.put("offset", stockQueryParams.getPage());
+
+        List<Stock> stockList = namedParameterJdbcTemplate.query(sql, map, new StockRowMapper());
+
+        return stockList;
+    }
+
+    @Override
+    public Integer countStocks(StockQueryParams stockQueryParams) {
+        String sql = "SELECT count(*) FROM stocks WHERE 1=1";
+
+        Map<String, Object> map = new HashMap<>();
+
+        // 查詢條件
+        sql = addFilteringSql(sql, map, stockQueryParams);
+
+        Integer total = namedParameterJdbcTemplate.queryForObject(sql, map, Integer.class);
+
+        return total;
+    }
+
+    // 查詢條件
+    private String addFilteringSql(String sql, Map<String, Object> map, StockQueryParams stockQueryParams) {
+        if (stockQueryParams.getSearch() != null) {
+            sql = sql + " AND product_name LIKE :search";
+            map.put("search", "%" + stockQueryParams.getSearch() + "%");
+        }
+
+        return sql;
+    }
+
+
+}
diff --git a/src/main/java/com/example/demo/rowMapper/StockRowMapper.java b/src/main/java/com/example/demo/rowMapper/StockRowMapper.java
new file mode 100644
index 0000000..37730ba
--- /dev/null
+++ b/src/main/java/com/example/demo/rowMapper/StockRowMapper.java
@@ -0,0 +1,22 @@
+package com.example.demo.rowMapper;
+
+import com.example.demo.entity.Stock;
+import org.springframework.jdbc.core.RowMapper;
+
+import java.sql.ResultSet;
+import java.sql.SQLException;
+
+public class StockRowMapper implements RowMapper<Stock> {
+
+    @Override
+    public Stock mapRow(ResultSet rs, int rowNum) throws SQLException {
+        Stock stock = new Stock();
+        stock.setStockId(rs.getInt("stock_id"));
+        stock.setStockName(rs.getString("name"));
+        stock.setSymbol(rs.getString("symbol"));
+        stock.setIndustry(rs.getString("industry"));
+        stock.setMarket(rs.getString("market"));
+        stock.setCreatedDate(rs.getDate("created_date"));
+        return stock;
+    }
+}
diff --git a/src/main/java/com/example/demo/service/StockService.java b/src/main/java/com/example/demo/service/StockService.java
index 93364e5..5c6715b 100644
--- a/src/main/java/com/example/demo/service/StockService.java
+++ b/src/main/java/com/example/demo/service/StockService.java
@@ -1,10 +1,14 @@
 package com.example.demo.service;
 
+import com.example.demo.dto.StockQueryParams;
 import com.example.demo.entity.Stock;
+import com.example.demo.util.PageUtil;
+import org.springframework.data.domain.Pageable;
 
 import java.util.List;
 
 
 public interface StockService {
-    List<Stock> getAllStocks();
+        List<Stock> getStocks(StockQueryParams stockQueryParams);
+        Integer countStocks(StockQueryParams stockQueryParams);
 }
diff --git a/src/main/java/com/example/demo/service/impl/StockServiceImpl.java b/src/main/java/com/example/demo/service/impl/StockServiceImpl.java
index 58329d4..5b51574 100644
--- a/src/main/java/com/example/demo/service/impl/StockServiceImpl.java
+++ b/src/main/java/com/example/demo/service/impl/StockServiceImpl.java
@@ -1,5 +1,6 @@
 package com.example.demo.service.impl;
 
+import com.example.demo.dto.StockQueryParams;
 import com.example.demo.entity.Stock;
 import com.example.demo.repository.StockRepository;
 import com.example.demo.service.StockService;
@@ -16,9 +17,12 @@ public class StockServiceImpl implements StockService {
 
 
     @Override
-    public List<Stock> getAllStocks() {
-        List<Stock> stockList = stockRepository.findAll();
-        System.out.println("stockList: "+stockList);
-        return stockList;
+    public List<Stock> getStocks(StockQueryParams stockQueryParams) {
+        return stockRepository.getStocks(stockQueryParams);
+    }
+
+    @Override
+    public Integer countStocks(StockQueryParams stockQueryParams) {
+        return stockRepository.countStocks(stockQueryParams);
     }
 }
diff --git a/src/main/java/com/example/demo/util/Page.java b/src/main/java/com/example/demo/util/Page.java
deleted file mode 100644
index 810bff3..0000000
--- a/src/main/java/com/example/demo/util/Page.java
+++ /dev/null
@@ -1,42 +0,0 @@
-package com.example.demo.util;
-
-import java.util.List;
-
-public class Page<T> {
-    private Integer limit;
-    private Integer offset;
-    private Integer total;
-    private List<T> results;
-
-    public Integer getLimit() {
-        return limit;
-    }
-
-    public void setLimit(Integer limit) {
-        this.limit = limit;
-    }
-
-    public Integer getOffset() {
-        return offset;
-    }
-
-    public void setOffset(Integer offset) {
-        this.offset = offset;
-    }
-
-    public Integer getTotal() {
-        return total;
-    }
-
-    public void setTotal(Integer total) {
-        this.total = total;
-    }
-
-    public List<T> getResults() {
-        return results;
-    }
-
-    public void setResults(List<T> results) {
-        this.results = results;
-    }
-}
diff --git a/src/main/java/com/example/demo/util/PageUtil.java b/src/main/java/com/example/demo/util/PageUtil.java
new file mode 100644
index 0000000..1e935ba
--- /dev/null
+++ b/src/main/java/com/example/demo/util/PageUtil.java
@@ -0,0 +1,13 @@
+package com.example.demo.util;
+
+import lombok.Data;
+
+import java.util.List;
+
+@Data
+public class PageUtil<T> {
+    private Integer size;
+    private Integer page;
+    private Integer total;
+    private List<T> results;
+}
diff --git a/src/main/java/com/example/demo/util/PageableUtils.java b/src/main/java/com/example/demo/util/PageableUtils.java
new file mode 100644
index 0000000..fe9e1cc
--- /dev/null
+++ b/src/main/java/com/example/demo/util/PageableUtils.java
@@ -0,0 +1,21 @@
+package com.example.demo.util;
+
+
+import com.example.demo.dto.common.PageDto;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.domain.Sort;
+
+public class PageableUtils {
+    public static Pageable from(PageDto pageDto) {
+        String orderBy = pageDto.getOrderBy() != null ? pageDto.getOrderBy() : "created_date";
+        String sortBy = pageDto.getSortBy() != null ? pageDto.getSortBy() : "desc";
+        int page = pageDto.getPage() != null ? pageDto.getPage() : 0;
+        int size = pageDto.getSize() != null ? pageDto.getSize() : 10;
+
+        Sort.Direction direction = Sort.Direction.fromString(sortBy);
+        Sort.Order order = new Sort.Order(direction, orderBy);
+
+        return PageRequest.of(page, size, Sort.by(order));
+    }
+}
-- 
2.46.2

