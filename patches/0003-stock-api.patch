From 2233f5994ad3993ed77da1dee48452527a5ca6a4 Mon Sep 17 00:00:00 2001
From: amao <86212616+maomao11223@users.noreply.github.com>
Date: Wed, 9 Apr 2025 11:11:29 +0800
Subject: [PATCH 3/4] =?UTF-8?q?[=E5=84=AA=E5=8C=96]=E6=9F=A5=E8=A9=A2?=
 =?UTF-8?q?=E6=89=80=E6=9C=89stock=20api?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../demo/controller/StockController.java      | 61 ++++-------------
 .../example/demo/dto/StockQueryParams.java    | 11 ++-
 .../com/example/demo/dto/common/PageDto.java  | 26 ++++---
 .../demo/repository/StockPriceRepository.java |  9 ++-
 .../demo/repository/StockRepository.java      | 12 ++--
 .../repository/impl/StockRepositoryImpl.java  | 68 -------------------
 .../example/demo/service/StockService.java    |  9 +--
 .../demo/service/impl/StockServiceImpl.java   | 25 ++++---
 .../specification/StockSpecification.java     | 32 +++++++++
 .../java/com/example/demo/util/PageUtil.java  | 13 ----
 .../com/example/demo/util/PageableUtils.java  | 10 +--
 11 files changed, 109 insertions(+), 167 deletions(-)
 delete mode 100644 src/main/java/com/example/demo/repository/impl/StockRepositoryImpl.java
 create mode 100644 src/main/java/com/example/demo/specification/StockSpecification.java
 delete mode 100644 src/main/java/com/example/demo/util/PageUtil.java

diff --git a/src/main/java/com/example/demo/controller/StockController.java b/src/main/java/com/example/demo/controller/StockController.java
index 4250d9b..68f93f3 100644
--- a/src/main/java/com/example/demo/controller/StockController.java
+++ b/src/main/java/com/example/demo/controller/StockController.java
@@ -4,26 +4,18 @@ import com.example.demo.dto.StockQueryParams;
 import com.example.demo.entity.Stock;
 import com.example.demo.model.common.ApiRestResponse;
 import com.example.demo.service.StockService;
-import com.example.demo.util.PageUtil;
-import com.example.demo.util.PageableUtils;
 import io.swagger.v3.oas.annotations.Operation;
-import jakarta.validation.constraints.Max;
-import jakarta.validation.constraints.Min;
 import lombok.RequiredArgsConstructor;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.data.domain.PageRequest;
-import org.springframework.data.domain.Pageable;
-import org.springframework.data.domain.Sort;
+import org.springframework.data.domain.Page;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.ModelAttribute;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.RestController;
 
-import java.util.List;
-
 @RestController
 @RequestMapping("/api/stocks")
 @RequiredArgsConstructor
@@ -34,49 +26,20 @@ public class StockController {
 
     @GetMapping
     @Operation(summary = "取得所有Stock")
-    public ApiRestResponse<PageUtil<Stock>> getAllStocks(
-            // 查詢條件 Filtering
-            @RequestParam(required = false) String search,
-
-            // 排序 Sorting
-            @RequestParam(defaultValue = "created_date") String orderBy,
-            @RequestParam(defaultValue = "desc") String sortBy,
-
-            // 分頁 Pagination
-            @RequestParam(defaultValue = "10") @Max(1000) @Min(0) Integer size,
-            @RequestParam(defaultValue = "0") @Min(0) Integer page
+    public ApiRestResponse<Page<Stock>> getAllStocks(
+            @ModelAttribute StockQueryParams stockQueryParams
     ) {
+        Page<Stock> result = stockService.getStocks(stockQueryParams);
 
-        // 設定查詢條件
-        StockQueryParams stockQueryParams = new StockQueryParams();
-        stockQueryParams.setOrderBy(orderBy);
-        stockQueryParams.setPage(page);
-        stockQueryParams.setSize(size);
-        stockQueryParams.setSortBy(sortBy);
-        stockQueryParams.setSearch(search);
-
-        // 取得查詢後的資料
-        List<Stock> stockList = stockService.getStocks(stockQueryParams);
-
-        // 取得總筆數
-        Integer total = stockService.countStocks(stockQueryParams);
-
-        // 分頁
-        PageUtil<Stock> resultPageUtil = new PageUtil<>();
-        resultPageUtil.setPage(page);
-        resultPageUtil.setTotal(total);
-        resultPageUtil.setSize(size);
-        resultPageUtil.setResults(stockList);
-
-
-        return ApiRestResponse.success(resultPageUtil);
+        return ApiRestResponse.success(result);
     }
 
-    @GetMapping("/{symbol}")
-    @Operation(summary = "根據symbol查詢特定股票")
-    public String getStockBySymbol(@PathVariable String symbol) {
-        return "success" + symbol;
-    }
+//    @GetMapping("/{stockId}")
+//    @Operation(summary = "根據stockId查詢特定股票的詳細資料")
+//    public ApiRestResponse<List<StockPrice>> getStockByStockId(@PathVariable Integer stockId) {
+//        List<StockPrice> stockPrices = stockService.getStockPricesByStockId(stockId);
+//        return ApiRestResponse.success(stockPrices);
+//    }
 
     @PostMapping
     @Operation(summary = "新增股票資料")
diff --git a/src/main/java/com/example/demo/dto/StockQueryParams.java b/src/main/java/com/example/demo/dto/StockQueryParams.java
index 67025c0..3e03929 100644
--- a/src/main/java/com/example/demo/dto/StockQueryParams.java
+++ b/src/main/java/com/example/demo/dto/StockQueryParams.java
@@ -1,11 +1,18 @@
 package com.example.demo.dto;
 
 import com.example.demo.dto.common.PageDto;
+import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+import lombok.experimental.SuperBuilder;
 
-@EqualsAndHashCode(callSuper = true)
 @Data
-public class StockQueryParams  extends PageDto {
+@EqualsAndHashCode(callSuper = true)
+@NoArgsConstructor
+@AllArgsConstructor
+@SuperBuilder
+public class StockQueryParams extends PageDto {
+    private String stockName;
 
 }
diff --git a/src/main/java/com/example/demo/dto/common/PageDto.java b/src/main/java/com/example/demo/dto/common/PageDto.java
index e8647bc..9693e7a 100644
--- a/src/main/java/com/example/demo/dto/common/PageDto.java
+++ b/src/main/java/com/example/demo/dto/common/PageDto.java
@@ -1,19 +1,29 @@
 package com.example.demo.dto.common;
 
 import io.swagger.v3.oas.annotations.media.Schema;
+import lombok.AllArgsConstructor;
+import lombok.Builder;
 import lombok.Data;
+import lombok.NoArgsConstructor;
+import lombok.experimental.SuperBuilder;
 
+
+// 查詢的分頁基礎設定
 @Data
+@NoArgsConstructor
+@AllArgsConstructor
+@SuperBuilder
 public class PageDto {
 
-    @Schema(description = "關鍵字查詢條件",example = "台積電")
-    private String search;
-    @Schema(description = "排序條件",example = "建立日期")
-    private String orderBy;
-    @Schema(description = "排序條件",example = "desc")
-    private String sortBy;
+    @Schema(description = "排序條件",example = "createdDate")
+    private String orderBy="createdDate";
+
+    @Schema(description = "排序條件",example = "asc")
+    private String sortBy="asc";
+
     @Schema(description = "顯示多少筆數據",example = "10")
-    private Integer size;
+    private Integer size=10;
+
     @Schema(description = "分頁索引",example = "0")
-    private Integer page;
+    private Integer page=0;
 }
diff --git a/src/main/java/com/example/demo/repository/StockPriceRepository.java b/src/main/java/com/example/demo/repository/StockPriceRepository.java
index dc72fc8..e91bfa2 100644
--- a/src/main/java/com/example/demo/repository/StockPriceRepository.java
+++ b/src/main/java/com/example/demo/repository/StockPriceRepository.java
@@ -4,9 +4,16 @@ import com.example.demo.entity.StockPrice;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.stereotype.Repository;
 
+import java.util.Date;
 import java.util.List;
 
 @Repository
-public interface StockPriceRepository extends JpaRepository<StockPrice, Long> {
+public interface StockPriceRepository extends JpaRepository<StockPrice, Integer> {
+
+    // 查詢指定 stockId 且在指定日期範圍內的 StockPrice
+    List<StockPrice> findByStock_StockIdAndTradeDateBetween(Integer stockId, Date startDate, Date endDate);
+
     List<StockPrice> findByStock_StockIdOrderByTradeDateDesc(Long stockId);
+
+
 }
\ No newline at end of file
diff --git a/src/main/java/com/example/demo/repository/StockRepository.java b/src/main/java/com/example/demo/repository/StockRepository.java
index d1b07b3..6289dc4 100644
--- a/src/main/java/com/example/demo/repository/StockRepository.java
+++ b/src/main/java/com/example/demo/repository/StockRepository.java
@@ -1,12 +1,10 @@
 package com.example.demo.repository;
 
-import com.example.demo.dto.StockQueryParams;
 import com.example.demo.entity.Stock;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
+import org.springframework.stereotype.Repository;
+@Repository
+public interface StockRepository extends JpaRepository<Stock,Integer> , JpaSpecificationExecutor<Stock> {
 
-import java.util.List;
-
-public interface StockRepository {
-
-    List<Stock> getStocks(StockQueryParams stockQueryParams);
-    Integer countStocks(StockQueryParams stockQueryParams);
 }
\ No newline at end of file
diff --git a/src/main/java/com/example/demo/repository/impl/StockRepositoryImpl.java b/src/main/java/com/example/demo/repository/impl/StockRepositoryImpl.java
deleted file mode 100644
index 84c1249..0000000
--- a/src/main/java/com/example/demo/repository/impl/StockRepositoryImpl.java
+++ /dev/null
@@ -1,68 +0,0 @@
-package com.example.demo.repository.impl;
-
-import com.example.demo.dto.StockQueryParams;
-import com.example.demo.entity.Stock;
-import com.example.demo.repository.StockRepository;
-import com.example.demo.rowMapper.StockRowMapper;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
-import org.springframework.stereotype.Component;
-
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-@Component
-public class StockRepositoryImpl implements StockRepository {
-
-    @Autowired
-    NamedParameterJdbcTemplate namedParameterJdbcTemplate;
-
-    @Override
-    public List<Stock> getStocks(StockQueryParams stockQueryParams) {
-        String sql = "SELECT stock_id,symbol,name,market,industry,created_date " +
-                "FROM stocks WHERE 1=1 ";
-
-        Map<String, Object> map = new HashMap<>();
-
-        // 查詢條件
-        sql = addFilteringSql(sql, map, stockQueryParams);
-
-        // 排序 orderBy 只能用字串拼接的方式，不能用傳入變數的方式！
-        sql = sql + " ORDER BY " + stockQueryParams.getOrderBy() + " " + stockQueryParams.getSortBy();
-
-        // 分頁
-        sql = sql + " LIMIT :limit OFFSET :offset";
-        map.put("limit", stockQueryParams.getSize());
-        map.put("offset", stockQueryParams.getPage());
-
-        List<Stock> stockList = namedParameterJdbcTemplate.query(sql, map, new StockRowMapper());
-
-        return stockList;
-    }
-
-    @Override
-    public Integer countStocks(StockQueryParams stockQueryParams) {
-        String sql = "SELECT count(*) FROM stocks WHERE 1=1";
-
-        Map<String, Object> map = new HashMap<>();
-
-        // 查詢條件
-        sql = addFilteringSql(sql, map, stockQueryParams);
-
-        Integer total = namedParameterJdbcTemplate.queryForObject(sql, map, Integer.class);
-
-        return total;
-    }
-
-    // 查詢條件
-    private String addFilteringSql(String sql, Map<String, Object> map, StockQueryParams stockQueryParams) {
-        if (stockQueryParams.getSearch() != null) {
-            sql = sql + " AND product_name LIKE :search";
-            map.put("search", "%" + stockQueryParams.getSearch() + "%");
-        }
-
-        return sql;
-    }
-
-
-}
diff --git a/src/main/java/com/example/demo/service/StockService.java b/src/main/java/com/example/demo/service/StockService.java
index 5c6715b..6ba2cce 100644
--- a/src/main/java/com/example/demo/service/StockService.java
+++ b/src/main/java/com/example/demo/service/StockService.java
@@ -2,13 +2,10 @@ package com.example.demo.service;
 
 import com.example.demo.dto.StockQueryParams;
 import com.example.demo.entity.Stock;
-import com.example.demo.util.PageUtil;
-import org.springframework.data.domain.Pageable;
+import org.springframework.data.domain.Page;
 
-import java.util.List;
 
+public interface StockService  {
+        Page<Stock> getStocks(StockQueryParams stockQueryParams);
 
-public interface StockService {
-        List<Stock> getStocks(StockQueryParams stockQueryParams);
-        Integer countStocks(StockQueryParams stockQueryParams);
 }
diff --git a/src/main/java/com/example/demo/service/impl/StockServiceImpl.java b/src/main/java/com/example/demo/service/impl/StockServiceImpl.java
index 5b51574..ceed85a 100644
--- a/src/main/java/com/example/demo/service/impl/StockServiceImpl.java
+++ b/src/main/java/com/example/demo/service/impl/StockServiceImpl.java
@@ -2,27 +2,36 @@ package com.example.demo.service.impl;
 
 import com.example.demo.dto.StockQueryParams;
 import com.example.demo.entity.Stock;
+import com.example.demo.repository.StockPriceRepository;
 import com.example.demo.repository.StockRepository;
 import com.example.demo.service.StockService;
+import com.example.demo.specification.StockSpecification;
+import com.example.demo.util.PageableUtils;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.jpa.domain.Specification;
 import org.springframework.stereotype.Service;
 
-import java.util.List;
-
 @Service
 public class StockServiceImpl implements StockService {
 
     @Autowired
     private StockRepository stockRepository;
 
+    @Autowired
+    private StockPriceRepository stockPriceRepository;
 
-    @Override
-    public List<Stock> getStocks(StockQueryParams stockQueryParams) {
-        return stockRepository.getStocks(stockQueryParams);
-    }
 
     @Override
-    public Integer countStocks(StockQueryParams stockQueryParams) {
-        return stockRepository.countStocks(stockQueryParams);
+    public Page<Stock> getStocks(StockQueryParams stockQueryParams) {
+        // 設定分頁
+        Pageable pageable = PageableUtils.fromParams(stockQueryParams);
+
+        // 設定查詢條件
+        Specification<Stock> spec = StockSpecification.buildSpecification(stockQueryParams);
+
+        return stockRepository.findAll(spec, pageable);
     }
+
 }
diff --git a/src/main/java/com/example/demo/specification/StockSpecification.java b/src/main/java/com/example/demo/specification/StockSpecification.java
new file mode 100644
index 0000000..11f5f09
--- /dev/null
+++ b/src/main/java/com/example/demo/specification/StockSpecification.java
@@ -0,0 +1,32 @@
+package com.example.demo.specification;
+
+import com.example.demo.dto.StockQueryParams;
+import com.example.demo.entity.Stock;
+import jakarta.persistence.criteria.Predicate;
+import lombok.extern.slf4j.Slf4j;
+import org.apache.commons.lang3.StringUtils;
+import org.springframework.data.jpa.domain.Specification;
+
+import java.util.ArrayList;
+import java.util.List;
+
+
+@Slf4j
+public class StockSpecification {
+    public static Specification<Stock> buildSpecification(StockQueryParams params) {
+        return (root, query, cb) -> {
+            List<Predicate> predicates = new ArrayList<>();
+
+            /**
+             * filtering 增加查詢條件
+             * StockQueryParams可以擴充查詢條件
+             */
+            if (StringUtils.isNotBlank(params.getStockName())) {
+                predicates.add(cb.like(root.get("stockName"), "%" + params.getStockName().trim() + "%"));
+            }
+
+            return predicates.isEmpty() ? cb.conjunction() : cb.and(predicates.toArray(new Predicate[0]));
+        };
+    }
+}
+
diff --git a/src/main/java/com/example/demo/util/PageUtil.java b/src/main/java/com/example/demo/util/PageUtil.java
deleted file mode 100644
index 1e935ba..0000000
--- a/src/main/java/com/example/demo/util/PageUtil.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package com.example.demo.util;
-
-import lombok.Data;
-
-import java.util.List;
-
-@Data
-public class PageUtil<T> {
-    private Integer size;
-    private Integer page;
-    private Integer total;
-    private List<T> results;
-}
diff --git a/src/main/java/com/example/demo/util/PageableUtils.java b/src/main/java/com/example/demo/util/PageableUtils.java
index fe9e1cc..f7d3cfe 100644
--- a/src/main/java/com/example/demo/util/PageableUtils.java
+++ b/src/main/java/com/example/demo/util/PageableUtils.java
@@ -7,11 +7,11 @@ import org.springframework.data.domain.Pageable;
 import org.springframework.data.domain.Sort;
 
 public class PageableUtils {
-    public static Pageable from(PageDto pageDto) {
-        String orderBy = pageDto.getOrderBy() != null ? pageDto.getOrderBy() : "created_date";
-        String sortBy = pageDto.getSortBy() != null ? pageDto.getSortBy() : "desc";
-        int page = pageDto.getPage() != null ? pageDto.getPage() : 0;
-        int size = pageDto.getSize() != null ? pageDto.getSize() : 10;
+    public static Pageable fromParams(PageDto pageDto) {
+        String orderBy =  pageDto.getOrderBy()  ;
+        String sortBy =  pageDto.getSortBy() ;
+        int page =   pageDto.getPage()  ;
+        int size =  pageDto.getSize()  ;
 
         Sort.Direction direction = Sort.Direction.fromString(sortBy);
         Sort.Order order = new Sort.Order(direction, orderBy);
-- 
2.46.2

